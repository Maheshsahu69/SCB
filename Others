it("dispatches `getFieldError` when userInputs is empty", async () => {
  store = mockStore({
    ...store.getState(),
    fielderror: { mandatoryFields: ["first_name"], error: [] },
  });

  // Set empty userInputs to force `else` branch
  let userInputs = {};

  const setUserInputsMock = jest.fn();
  jest.spyOn(React, "useState").mockReturnValue([userInputs, setUserInputsMock]);

  render(<Provider store={store}><Fields /></Provider>);

  fireEvent.submit(screen.getByRole("form"));

  await waitFor(() => {
    expect(fieldErrorAction.getFieldError).toHaveBeenCalled();
  });
});
