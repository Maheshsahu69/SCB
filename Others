import { KeyWithAnyModel, ValidationObjModel } from '../../utils/model/common-model';
import rulesUtils from './rules.utils';
import { checkProductDetails } from '../../services/common-service';
import { authenticateType, getUrl } from '../../utils/common/change.utils';

const Rules_ld_1 = (props: KeyWithAnyModel, stageInfo: KeyWithAnyModel): KeyWithAnyModel => {
 const validationObj: ValidationObjModel = {
        nonEditable: [],
        hidden: [],
        modifyVisibility:[]
    };
    const auth = authenticateType()
    const isCASAProduct = checkProductDetails(stageInfo.products);
    let defaultVisiblity:any= []
    /*istanbul ignore else */
    if(auth === "manual"||"myinfo"){
      let hiddenFields = ["email","full_name","date_of_birth","mobile_number","residency_status","NRIC","work_type","year_of_assessment_fff_1","year_of_assessment_fff_2","annual_income_fff_1","annual_income_fff_2","dsa_code",
        "credit_limit_consent"]
       if(auth === "myinfo") {
            hiddenFields.push(
            "postal_code",
            "postal",
            "block",
            "building_name",
            "street_name",
            "unit_no",
            "account_currency_9",
            "myinfo_data_cli",
            "banca_ins_request_1",
            "banca_ins_request_2",
            "banca_ins_request_amount",
            "banca_ins_Consent_rp2",
            "banca_ins_Consent_rp3",
            "banca_ins_Consent_rp5",
            "banca_ins_Consent_rp6",
            "myinfo_data_cli_1",
            "contact_preference",
            "multi_currency_selection",
            "credit_limit_consent_1",
            "contact_preference_casa"
            );
            defaultVisiblity.push("residential_address")
            const nonEditableFields = ["marital_status","residential_address"]
            validationObj.nonEditable.push(nonEditableFields)
        }
         
/*istanbul ignore else */
        if(!isCASAProduct){
            hiddenFields.push('nationality_add');
        }
        if(stageInfo.applicants['residency_status_a_1'] === "CT"){
            hiddenFields.push("postal_code_other")
 
        }
        if(stageInfo.applicants['residency_status_a_1'] === "FR"){
            hiddenFields.push("postal_code")
 
        }
 
        if(stageInfo.applicants['residency_status_a_1'] === "FR"){
            defaultVisiblity = ["overseas_contact_country_code","overseas_contact_area_code","overseas_contact_no"];
        }
        defaultVisiblity.push( "residential_address_consent","block","street_name")
        validationObj.hidden!.push(hiddenFields);
        validationObj.modifyVisibility!.push(defaultVisiblity)
      }
 
    return rulesUtils(props, validationObj);
}

export default Rules_ld_1;








import Rules_ld_1 from "./rules_ld-1";
import rulesUtils from "./rules.utils";
import { KeyWithAnyModel,ValidationObjModel } from "../../utils/model/common-model";
jest.mock('./rules.utils',()=> jest.fn())

jest.mock("axios", () => ({
   __esModule: true,
 }));
 

describe('ld1 rules',()=>{
 test('render rule utils',()=>{
    const mockProps:KeyWithAnyModel={key1:'value1',key2:'value2'};
    const mockState:KeyWithAnyModel={stateKey:'stateValue'};
    const _s={};
    const mockValidationObj:ValidationObjModel={nonEditable:[],hidden:[]}
    const mockReturnValue:KeyWithAnyModel={processedKey:"processdValue"};

    (rulesUtils as jest.Mock).mockReturnValue(mockReturnValue)
    const result = Rules_ld_1(mockProps, mockState);
 expect(rulesUtils).toHaveBeenCalledWith(mockProps,mockValidationObj);
 expect(result).toEqual(mockReturnValue);

 });
});
