it("removes specific fields when userInputs contains mandatory fields", async () => {
  store = mockStore({
    ...store.getState(),
    fielderror: { mandatoryFields: ["field1"] },
  });

  let userInputs = { field1: "value1", first_name: "John" };

  const setUserInputsMock = jest.fn();
  jest.spyOn(React, "useState").mockReturnValueOnce([userInputs, setUserInputsMock]);

  render(<Provider store={store}><Fields /></Provider>);

  fireEvent.submit(screen.getByRole("form"));

  await waitFor(() => {
    console.log("Mock Calls:", setUserInputsMock.mock.calls);
    expect(setUserInputsMock).toHaveBeenCalled();
  });
});
