xport const stageFields = (
  stageSelector: Array<StageDetails>,
  stageId: string,
  employeeToggleSelector?: any,
  other?: string | undefined
) => {
  let stageFields: Array<StageFieldModel> = [];
  if (
    stageSelector && stageSelector.length>0 &&
    stageSelector[0].stageInfo &&
    stageSelector[0].stageInfo.fieldMetaData &&
    stageSelector[0].stageInfo.fieldMetaData.data.stages
  ) {
    let currentStage =
      stageId === CONSTANTS.STAGE_NAMES.LD_1 
        ? ["ad-11"]
        : [stageId];
    currentStage.forEach((name) => {
      const stageIndex = FindIndex(stageSelector[0].stageInfo, name);
      stageFields.push(
        stageSelector[0].stageInfo.fieldMetaData.data.stages[stageIndex]
      );
    });
  }
  let currentStageFields: any;
  if (stageFields) {
    let fieldsetGroup: Array<FieldSetGroupModel[]> = [];
    const groupObj = (response: StageFieldModel) => {
      return response?.fields?.reduce(
        (prev: Array<FieldSetGroupModel>, { field_set_name, ...items }) => {
          let id = prev.findIndex(
            (item: KeyWithAnyModel) => item.field_set_name === field_set_name
          );
          fieldGroupingFunc(id, prev, field_set_name, items);
          return prev;
        },
        []
      );
    };

    let filteredData: any =stageFields.length > 0 ? stageFields[0]?.fields?.filter((item:KeyWithAnyModel) => item.rwb_category===stageSelector[0].stageId) : [];

   
    let stageFieldData= JSON.parse(JSON.stringify(stageFields));
    /* istanbul ignore else */
  if( !Array.isArray(stageFieldData) && stageFieldData.length>0 ){
    stageFieldData[0].fields= filteredData;
  }

    stageFieldData.forEach((data: StageFieldModel) => {

      if (fieldsetGroup.length > 0) {
        fieldsetGroup[0].push(groupObj(data)[0]);
      } else {
        fieldsetGroup.push(groupObj(data));
      }
    });
    if (stageId === "bd-2") {
      currentStageFields = Rules_bd_2(
        fieldsetGroup,
        stageSelector[0].stageInfo.application
      );
    } else if (stageId === "bd-1") {
      currentStageFields = Rules_bd_1(
        fieldsetGroup,
        stageSelector?.[0]?.stageInfo?.fieldMetaData?.data?.stages?.[0]?.fields
      );
    }
    else if (stageId === "pd-1") {

      currentStageFields = Rules_bd_1(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    }
    else if (stageId === "bd-1a") {

      currentStageFields = Rules_bd_1(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    }
    else if (stageId === "bd-3") {
      currentStageFields = Rules_bd_3(
        fieldsetGroup,
        stageSelector[0].stageInfo.application
      );
    } else if (stageId === "bd-4") {
      currentStageFields = Rules_bd_4(
        fieldsetGroup,
        stageSelector[0].stageInfo.application,
        employeeToggleSelector
      );
    }
    else if (stageId === "ad-1") {
      currentStageFields = Rules_ad_1(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    }
    else if (stageId === "ad-1a") {
      currentStageFields = Rules_ad_1(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    }
    else if (stageId === "ad-2") {
      currentStageFields = Rules_ad_2(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    } 
    else if (stageId === "ad-3") {
      currentStageFields = Rules_ad_2(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    } 
    else if (stageId === "ad-6") {
      currentStageFields = Rules_ad_6(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    } 
    else if (stageId === "ld-1") {
      currentStageFields = Rules_ad_2(
        fieldsetGroup,
        stageSelector[0].stageInfo.fieldMetaData.data.stages[0].fields
      );
    } 
    else {
      currentStageFields = RulesSSF(
        fieldsetGroup,
        stageSelector[0] && stageSelector[0].stageInfo.application,
      );
    }
  }
  return {
    fields: currentStageFields,
  };
};
